[
   {
      "question": "Co znamená vlastnost 'konečnost' algoritmu?",
      "options": [
        "Algoritmus má více výstupů",
        "Algoritmus musí skončit v definovaném čase",
        "Algoritmus je napsán v přirozeném jazyce",
        "Algoritmus musí být efektivní"
      ],
      "answer": "Algoritmus musí skončit v definovaném čase"
    },
    {
      "question": "Který způsob zápisu algoritmu je neformální a čitelný pro člověka?",
      "options": [
        "Programovací jazyk",
        "Pseudokód",
        "Vývojový diagram",
        "Strojový kód"
      ],
      "answer": "Pseudokód"
    },
    {
      "question": "Co znamená hromadnost algoritmu?",
      "options": [
        "Algoritmus řeší pouze jeden konkrétní problém",
        "Algoritmus má více vstupů než výstupů",
        "Algoritmus řeší škálu podobných problémů",
        "Algoritmus je napsán v programovacím jazyce"
      ],
      "answer": "Algoritmus řeší škálu podobných problémů"
    },
    {
      "question": "Jaký je příklad pseudokódu?",
      "options": [
        "int main() { return 0; }",
        "Najdi maximum v poli čísel",
        "define factorial(n): f := 1",
        "Obdélník s textem 'vstup'"
      ],
      "answer": "define factorial(n): f := 1"
    },
    {
      "question": "Co je charakteristické pro efektivitu algoritmu?",
      "options": [
        "Má pouze jeden vstup",
        "Je co možná nejrychlejší a šetří zdroje",
        "Je specifický pro jeden problém",
        "Nepotřebuje výstup"
      ],
      "answer": "Je co možná nejrychlejší a šetří zdroje"
    },
    {
      "question": "Co charakterizuje vyšší programovací jazyky?",
      "options": [
        "Jsou blíže strojovému kódu",
        "Jsou nezávislé na hardware",
        "Jsou vždy interpretované",
        "Nepodporují objektové programování"
      ],
      "answer": "Jsou nezávislé na hardware"
    },
    {
      "question": "Který jazyk je příkladem kompilovaného jazyka?",
      "options": [
        "JavaScript",
        "PHP",
        "C++",
        "Python"
      ],
      "answer": "C++"
    },
    {
      "question": "Jaká je nevýhoda interpretovaných jazyků?",
      "options": [
        "Vyšší výkon díky překladu",
        "Publikují zdrojový kód",
        "Nutnost kompilace pro každou platformu",
        "Omezená podpora pro webový vývoj"
      ],
      "answer": "Publikují zdrojový kód"
    },
    {
      "question": "Co je výhodou kompilovaných jazyků?",
      "options": [
        "Lepší přenositelnost mezi systémy",
        "Vyšší výkon díky překladu do strojového kódu",
        "Automatická správa paměti",
        "Rychlejší vývoj aplikací"
      ],
      "answer": "Vyšší výkon díky překladu do strojového kódu"
    },
    {
      "question": "Který jazyk je příkladem interpretovaného jazyka?",
      "options": [
        "C#",
        "JavaScript",
        "Java",
        "C++"
      ],
      "answer": "JavaScript"
    },
    {
      "question": "Co je JVM v kontextu Javy?",
      "options": [
        "Nástroj pro vývoj Java aplikací",
        "Virtuální stroj pro běh Java bytecode",
        "Prostředí pro testování Java kódu",
        "Knihovna pro webový vývoj"
      ],
      "answer": "Virtuální stroj pro běh Java bytecode"
    },
    {
      "question": "Co obsahuje JRE?",
      "options": [
        "Nástroje pro vývoj a kompilátor",
        "JVM a základní knihovny",
        "Debugger a profiler",
        "Knihovny pro webové aplikace"
      ],
      "answer": "JVM a základní knihovny"
    },
    {
      "question": "Jakou roli hraje JIT v JVM?",
      "options": [
        "Kompiluje zdrojový kód do bytecode",
        "Překládá bytecode do nativního kódu za běhu",
        "Spravuje paměť aplikace",
        "Testuje Java aplikace"
      ],
      "answer": "Překládá bytecode do nativního kódu za běhu"
    },
    {
      "question": "Co zajišťuje platformovou nezávislost Javy?",
      "options": [
        "JDK",
        "JRE",
        "JVM",
        "JIT"
      ],
      "answer": "JVM"
    },
    {
      "question": "Jak se v Javě vypisuje do konzole?",
      "options": [
        "console.log('Hello')",
        "System.out.println('Hello')",
        "print('Hello')",
        "write('Hello')"
      ],
      "answer": "System.out.println('Hello')"
    },
    {
      "question": "Jak se v JavaScriptu deklaruje proměnná?",
      "options": [
        "int age = 30;",
        "let age = 30;",
        "final age = 30;",
        "static age = 30;"
      ],
      "answer": "let age = 30;"
    },
    {
      "question": "Co je charakteristické pro Java jako programovací jazyk?",
      "options": [
        "Je primárně určen pro webový vývoj",
        "Kompiluje se do bytecode a běží na JVM",
        "Je čistě interpretovaný",
        "Nepodporuje objektové programování"
      ],
      "answer": "Kompiluje se do bytecode a běží na JVM"
    },
    {
      "question": "Co je přetypování v Javě?",
      "options": [
        "Automatický převod proměnných",
        "Explicitní převod mezi typy, např. (int) 3.14",
        "Převod textu na číslo",
        "Změna názvu proměnné"
      ],
      "answer": "Explicitní převod mezi typy, např. (int) 3.14"
    },
    {
      "question": "Kde se ukládají globální proměnné v paměti?",
      "options": [
        "Stack",
        "Heap",
        "Registr",
        "Cache"
      ],
      "answer": "Heap"
    },
    {
      "question": "Co je nevýhodou stack paměti?",
      "options": [
        "Pomalý přístup",
        "Omezená velikost",
        "Potřeba garbage collectoru",
        "Fragmentace paměti"
      ],
      "answer": "Omezená velikost"
    } 
]
